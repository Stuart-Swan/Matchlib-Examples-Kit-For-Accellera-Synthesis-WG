

Very simple Matchlib model showing Pre-HLS and Post-HLS simulations

This example shows how to wrap a 1r1w port RAM in a SC/Matchlib wrapper module
so that it appears as a 2r2w port RAM to other modules. All of the communication
in this model uses Matchlib Connections::Combinational channels.
Because all of the communication uses Matchlib channels, the RAM itself can be located
anywhere in the DUT or Testbench hierarchy, and it can be accessed by one or more SystemC processes.

This model is intentionally coded to be very simple. 
A more scalable model would likely use the arbiter class in Matchlib: see Arbiter.h.

Steps:

1. Build the SystemC simulation executable by typing:
   make build

2. Run the SC simulation by typing:
   ./sim_sc

3. View the waveforms generated from the SC simulation:
   make view_wave

4. Run Catapult HLS to generate Verilog RTL for DUT:
   catapult -f go_hls.tcl

5. Launch SCVerify / QuestaSim with generated RTL by typing in Catapult command line:
   dofile scverify.tcl

6. Run RTL Sim by typing in QuestaSim command line:
   run -all
   wave zoom full

7. View the RTL simulation waveforms and compare to SC waveforms before HLS synthesis

8. Delete all generated files
    make clean
